{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","components/TodoFooter/TodoFooter.js","App.js","index.js"],"names":["TodoItem","props","todo","deleteTodo","handleCompleted","handleDoubleEditing","handleChangingEditing","title","id","completed","className","onChange","type","checked","onDoubleClick","onClick","onSubmit","event","preventDefault","value","target","defaultProps","TodoList","todos","map","cx","editing","edit","key","TodoApp","state","handleSubmit","addTodo","setState","prevState","handleInput","replace","this","placeholder","React","Component","TodoFooter","clearComponent","handleCompletedFilter","handleActiveFilter","handleAll","filter","length","href","every","App","originalTodos","isComplete","handleAllCompleted","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.354e809d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = (props) => {\n  const {\n    todo,\n    deleteTodo,\n    handleCompleted,\n    handleDoubleEditing,\n    handleChangingEditing,\n  } = props;\n  const { title, id, completed } = todo;\n\n  const handleSubmitEdit = (event) => {\n    event.preventDefault();\n    handleDoubleEditing(id);\n  };\n\n  const handleInputEdit = ({ target }) => {\n    const { value } = target;\n\n    handleChangingEditing(id, value);\n  };\n\n  return (\n    <>\n      <div className=\"view\">\n        <input\n          onChange={() => handleCompleted(id)}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${id}`}\n          checked={completed}\n        />\n        <label onDoubleClick={() => handleDoubleEditing(id)}>{title}</label>\n        <button\n          onClick={() => deleteTodo(id)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <form onSubmit={handleSubmitEdit}>\n        <input\n          onChange={handleInputEdit}\n          value={title}\n          type=\"text\"\n          className=\"edit\"\n        />\n      </form>\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n  }).isRequired,\n  deleteTodo: PropTypes.func,\n  handleCompleted: PropTypes.func,\n  handleDoubleEditing: PropTypes.func,\n  handleChangingEditing: PropTypes.func,\n};\n\nTodoItem.defaultProps = {\n  deleteTodo: () => {},\n  handleCompleted: () => {},\n  handleDoubleEditing: () => {},\n  handleChangingEditing: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = (props) => {\n  const {\n    todos,\n    deleteTodo,\n    handleCompleted,\n    handleDoubleEditing,\n    handleChangingEditing,\n  } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <li\n          className={cx({ completed: todo.completed }, { editing: todo.edit })}\n          key={todo.id}\n        >\n\n          <TodoItem\n            todo={todo}\n            deleteTodo={deleteTodo}\n            handleCompleted={handleCompleted}\n            handleDoubleEditing={handleDoubleEditing}\n            handleChangingEditing={handleChangingEditing}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n  deleteTodo: PropTypes.func,\n  handleCompleted: PropTypes.func,\n  handleDoubleEditing: PropTypes.func,\n  handleChangingEditing: PropTypes.func,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  deleteTodo: () => {},\n  handleCompleted: () => {},\n  handleDoubleEditing: () => {},\n  handleChangingEditing: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoApp extends React.Component {\n  state = {\n    title: '',\n    id: 1,\n    completed: false,\n    edit: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { addTodo } = this.props;\n\n    if (title !== '') {\n      addTodo(this.state);\n    }\n\n    this.setState(prevState => ({\n      title: '',\n      id: prevState.id + 1,\n    }));\n  };\n\n  handleInput = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value.replace(/\\s/g, ''),\n    });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleInput}\n          value={title}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoFooter = (props) => {\n  const {\n    todos,\n    clearComponent,\n    handleCompletedFilter,\n    handleActiveFilter,\n    handleAll,\n  } = props;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => todo.completed === false)\n          .length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a onClick={handleAll} href=\"#/\" className=\"selected\">All</a>\n        </li>\n\n        <li>\n          <a onClick={handleActiveFilter} href=\"#/active\">Active</a>\n        </li>\n\n        <li>\n          <a onClick={handleCompletedFilter} href=\"#/completed\">Completed</a>\n        </li>\n      </ul>\n\n      <button\n        onClick={clearComponent}\n        type=\"button\"\n        className={cx('clear-completed', { 'hidden-but': todos\n          .every(todo => todo.completed === false) })}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nTodoFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n  clearComponent: PropTypes.func,\n  handleCompletedFilter: PropTypes.func,\n  handleActiveFilter: PropTypes.func,\n  handleAll: PropTypes.func,\n};\n\nTodoFooter.defaultProps = {\n  todos: [],\n  clearComponent: () => {},\n  handleCompletedFilter: () => {},\n  handleActiveFilter: () => {},\n  handleAll: () => {},\n};\n","import React from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoFooter } from './components/TodoFooter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    isComplete: false,\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n      originalTodos: [\n        ...prevState.originalTodos,\n        todo,\n      ],\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n      originalTodos: prevState.originalTodos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  clearComponent = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.completed === false),\n      originalTodos: prevState.originalTodos\n        .filter(todo => todo.completed === false),\n    }));\n  };\n\n  handleCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n      originalTodos: prevState.originalTodos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  handleDoubleEditing = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            edit: !todo.edit,\n          };\n        }\n\n        return todo;\n      }),\n      originalTodos: prevState.originalTodos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            edit: !todo.edit,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  handleChangingEditing = (id, value) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: value,\n          };\n        }\n\n        return todo;\n      }),\n\n      originalTodos: prevState.originalTodos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: value,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  handleAllCompleted = () => {\n    this.setState((prevState) => {\n      if (prevState.isComplete === false) {\n        return {\n          todos: prevState.todos.map(todo => ({\n            ...todo,\n            completed: true,\n          })),\n          originalTodos: prevState.originalTodos.map(todo => ({\n            ...todo,\n            completed: true,\n          })),\n          isComplete: !prevState.isComplete,\n        };\n      }\n\n      return {\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n        originalTodos: prevState.originalTodos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n        isComplete: !prevState.isComplete,\n      };\n    });\n  };\n\n  handleCompletedFilter = () => {\n    this.setState(prevState => ({\n      todos: prevState.originalTodos.filter(todo => todo.completed === true),\n    }));\n  };\n\n  handleActiveFilter = () => {\n    this.setState(prevState => ({\n      todos: prevState.originalTodos.filter(todo => todo.completed === false),\n    }));\n  };\n\n  handleAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.originalTodos,\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoApp addTodo={this.addTodo} />\n\n        </header>\n\n        <section className=\"main\">\n          <input\n            onClick={this.handleAllCompleted}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todos}\n            deleteTodo={this.deleteTodo}\n            handleCompleted={this.handleCompleted}\n            handleDoubleEditing={this.handleDoubleEditing}\n            handleChangingEditing={this.handleChangingEditing}\n          />\n        </section>\n        {todos.length\n          ? (\n            <TodoFooter\n              todos={todos}\n              clearComponent={this.clearComponent}\n              handleCompletedFilter={this.handleCompletedFilter}\n              handleActiveFilter={this.handleActiveFilter}\n              handleAll={this.handleAll}\n            />\n          )\n          : (<></>)\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}